{"version":3,"names":[],"mappings":"","sources":["devicelog/factories/tableau-dao-factory.js"],"sourcesContent":["(function () {\n  'use strict';\n\n  angular.module('devicelog')\n    .factory('TableauDAO', TableauDAO);\n\n  TableauDAO.$inject = ['$http', '$q', 'dialogs', 'APP_CONFIG', 'InApiUtils'];\n\n  function TableauDAO($http, $q, dialogs, APP_CONFIG, InApiUtils) {\n    var service = {};\n\n    function getTicket() {\n      var defer = $q.defer();\n\n      $http.get(APP_CONFIG.tableauTicketUrl)\n        .then(function (res) {\n          if (res && res.data && res.data.ticket) {\n            defer.resolve(res.data.ticket);\n          } else {\n            dialogs.notify('讀取失敗', '無法由伺服器取得 ticket, 請稍後再試。');\n          }\n        }, function () {\n          dialogs.notify('讀取失敗', '無法由伺服器取得 ticket, 請稍後再試。');\n        });\n\n      return defer.promise;\n    }\n\n    function getTableauQueryUrl(devCategory, measure) {\n      var defer = $q.defer(), url;\n\n      getTicket().then(function (ticket) {\n        if (devCategory === 'OUTLET') {\n          url = APP_CONFIG.tableauQueryUrl +\n            InApiUtils.stringFormat('/{0}/views/{1}InAPI_Outlet_Workbook/{2}Dashboard' +\n              '?:tooltip=yes&:refresh=no&:record_performance=no&:revert=all',\n              ticket, APP_CONFIG.tableauWorkbookPrefix, measure.value);\n        } else if (devCategory === 'SENSOR') {\n          url = APP_CONFIG.tableauQueryUrl +\n            InApiUtils.stringFormat('/{0}/views/{1}InAPI_SensorAttr{2}_Workbook/SensorAttr{2}Dashboard' +\n              '?:tooltip=yes&:refresh=no&:record_performance=no&:revert=all',\n              ticket, APP_CONFIG.tableauWorkbookPrefix, measure.dataType);\n        }\n\n        defer.resolve(url);\n      });\n\n      return defer.promise;\n    }\n\n    function getMeasureOptions(devCategory) {\n      var options = [];\n\n      devCategory = devCategory ? devCategory.toLowerCase() : '';\n\n      switch (devCategory) {\n        case 'sensor':\n          options = [\n            {dataType: 'Number', value: '400100', label: '溫度'},\n            {dataType: 'Number', value: '400200', label: '濕度'},\n            {dataType: 'Number', value: '102100', label: '警報模式'},\n            {dataType: 'String', value: '101800', label: '電池存量狀態'},\n            {dataType: 'Number', value: '110500', label: '移動狀態'},\n            {dataType: 'Number', value: '100010039', label: '電池存量事件'},\n            {dataType: 'Number', value: '100030090', label: '紅外線移動偵測事件'}\n          ];\n          break;\n        case 'outlet':\n          options = [\n            {value: 'Voltage', label: '電壓'},\n            {value: 'Current', label: '電流'},\n            {value: 'Frequency', label: '頻率'},\n            {value: 'PowerFactor', label: '功率因數'},\n            {value: 'ActivePower', label: '實功率'},\n            {value: 'ApparentPower', label: '視在功率'},\n            {value: 'MainEnergy', label: '累積電量'},\n            {value: 'NegativeEnergy', label: '反向累積電量'},\n            {value: 'ShortMainEnergy', label: '短期累積電量'},\n            {value: 'ShortNegativeEnergy', label: '短期反向累積電量'},\n            {value: 'ShortTime', label: '使用時間'},\n            {value: 'RelayStatus', label: '電源狀態'}\n          ];\n          break;\n        default:\n          options = [];\n      }\n\n      return options;\n    }\n\n    service.getMeasureOptions = getMeasureOptions;\n    service.getTableauQueryUrl = getTableauQueryUrl;\n\n    return service;\n  }\n}());\n"],"file":"tableau-dao-factory.js"}