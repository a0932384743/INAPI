{"version":3,"names":[],"mappings":"","sources":["devicelog/constrollers/devicelog-5-1-list-controller.js"],"sourcesContent":["(function () {\n  'use strict';\n\n  angular.module('devicelog')\n    .controller('DevicelogListCtrl', Ctrl);\n\n  Ctrl.$inject = ['$scope', '$filter', '$state', '$stateParams', 'dialogs',\n                  'InApiUtils', 'AccountDAO', 'ResourceDAO', 'ResourceDialog', 'DeviceDAO', 'DeviceProfile'];\n\n  function Ctrl($scope, $filter, $state, $stateParams, dialogs,\n                InApiUtils, AccountDAO, ResourceDAO, ResourceDialog, DeviceDAO, DeviceProfile) {\n    var vm = this, devicesCache = [];\n\n    vm.flagShowResource = false;\n    vm.isLoading = false;\n\n    // reference to: http://ui-grid.info/docs/#/tutorial/305_appScope\n    vm.resourceListOpt = {\n      data: [],\n      columnDefs: [\n        {field: 'seqNo', displayName: '編號', width: '10%', cellClass: 'ui-grid-center'},\n        {field: 'un', displayName: '資源擁有者', width: '70%'},\n        {\n          name: 'deleteBtn',\n          displayName: '刪除',\n          width: '10%',\n          cellClass: 'ui-grid-center',\n          cellTemplate: '<img class=\"btn-like\" src=\"images/InAPI_5_delectIcon.png\" alt=\"刪除\" data-ng-click=\"grid.appScope.confimResourceDelete(row.entity.un, $event)\" />'\n        }\n      ],\n      // 一定要設定否則 grid.appScope 會預設抓取 $scope\n      appScopeProvider: vm,\n      enableColumnMenus: false,\n      enableHorizontalScrollbar: 0,\n      enableVerticalScrollbar: 2,\n      enableRowSelection: true,\n      enableRowHeaderSelection: false,\n      enableSelectAll: false,\n      multiSelect: false,\n      onRegisterApi: function (gridApi) {\n        vm.resourceGridApi = gridApi;\n        gridApi.selection.on.rowSelectionChanged($scope, chooseResourceAccount);\n      }\n    };\n\n    vm.deviceListOpt = {\n      data: [],\n      columnDefs: [\n        {field: 'devLinkType', displayName: '聯網類別', width: '15%'},\n        {field: 'devId', displayName: '裝置ID', width: '30%'},\n        {field: 'instanceType', displayName: '型態', width: '10%'},\n        {field: 'devTypeName', displayName: '裝置類別', width: '15%'},\n        {field: 'connectedState', displayName: '連線狀態', width: '10%'},\n        {\n          name: 'detailBtn',\n          displayName: '日誌',\n          width: '10%',\n          cellTemplate: '<img class=\"btn-like\" src=\"images/InAPI_5_chartIcon.png\" alt=\"明細\" data-ng-if=\"row.entity.hasDevLog\" data-ng-click=\"grid.appScope.goDetail(row.entity.devId, row.entity.devCategory)\" />'\n        }\n      ],\n      // 一定要設定否則 grid.appScope 會預設抓取 $scope\n      appScopeProvider: vm,\n      enableColumnMenus: false,\n      enableHorizontalScrollbar: 0,\n      enableVerticalScrollbar: 2,\n      enablePaginationControls: false,\n      paginationPageSize: 15,\n      onRegisterApi: function (gridApi) {\n        vm.deviceGridApi = gridApi;\n      }\n    };\n\n    function init() {\n      AccountDAO.getMyInfo()\n        .then(function (me) {\n          getResourceAccounts(me.userId);\n        }, function () {\n          dialogs.notify('取得資料失敗', '無法取得您的資料，請重整頁面。');\n        });\n\n      listDevices();\n    }\n\n    function getResourceAccounts() {\n      ResourceDAO.getResourceList()\n        .then(function (resourcList) {\n          var i, cnt = resourcList ? resourcList.length : 0;\n\n          for (i = 0; i < cnt; ++i) {\n            addResourceRow(resourcList[i].userId);\n          }\n        }, function (resData) {\n          dialogs.notify(\n            '取得資源列表失敗',\n            InApiUtils.stringFormat('發生未知錯誤，錯誤代碼：{0}<br/>錯誤訊息：{1}', resData.err.code, resData.err.msg)\n          );\n        });\n    }\n\n    function chooseResourceAccount(row) {\n      var un;\n\n      if (row && row.entity && row.entity.un && row.isSelected) {\n        un = row.entity.un;\n        vm.deviceListOpt.bindUn = un;\n        listDevices(un, true);\n      }\n    }\n\n    function listDevices(un, flagReload) {\n      vm.isLoading = true;\n\n      DeviceDAO.getDeviceList(un, 1, 50, flagReload)\n          .then(function (resData) {\n            vm.qryDeviceId = '';\n\n            if (resData && resData.devices && resData.devices.length > 0) {\n              devicesCache = InApiUtils.camelizeObj(resData.devices);\n              devicesCache = DeviceProfile.formatProfiles(devicesCache);\n              vm.deviceListOpt.data = devicesCache;\n            } else {\n              vm.deviceListOpt.data = devicesCache = [];\n            }\n          }, function (res) {\n            var err;\n\n            if (res && res.err) {\n              err = res.err;\n\n              if (err.code === 'r8999') {\n                getResourceAuth(un);\n\n                if (vm.resourceGridApi) {\n                  vm.resourceGridApi.selection.clearSelectedRows();\n                }\n              } else {\n                dialogs.notify(\n                  '取得裝置列表失敗',\n                  InApiUtils.stringFormat('無法取得裝置列表，錯誤代碼：{0}<br/>錯誤訊息：{1}', err.code, err.msg)\n                );\n              }\n            } else {\n              dialogs.notify('取得裝置列表失敗', '無法取得裝置列表');\n            }\n\n            vm.deviceListOpt.data = devicesCache = [];\n          }).finally(function () {\n            vm.isLoading = false;\n          });\n    }\n\n    function refreshResourceIndex() {\n      var i, cnt;\n\n      vm.resourceListOpt.data = vm.resourceListOpt.data || [];\n      cnt = vm.resourceListOpt.data.length;\n\n      for (i = 0; i < cnt; ++i) {\n        vm.resourceListOpt.data[i].seqNo = i + 1;\n      }\n    }\n\n    function addResourceRow(un) {\n      var i, rowData;\n\n      if (!un) {\n        return;\n      }\n\n      vm.resourceListOpt.data = vm.resourceListOpt.data || [];\n\n      // escape when un has been in the list\n      for (i in vm.resourceListOpt.data) {\n        if (vm.resourceListOpt.data[i].un === un) {\n          return;\n        }\n      }\n\n      rowData = {\n        seqNo: vm.resourceListOpt.data.length + 1,\n        un: un\n      };\n\n      vm.resourceListOpt.data.push(rowData);\n    }\n\n    function deleteResourceRow(un) {\n      var i, cnt = vm.resourceListOpt.data ? vm.resourceListOpt.data.length : 0;\n\n      for (i = 0; i < cnt; ++i) {\n        if (vm.resourceListOpt.data[i].un === un) {\n          vm.resourceListOpt.data.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    function handleDelErrCode(err, un) {\n      err = err || {code: ''};\n\n      switch (err.code) {\n        case '0':\n          dialogs.notify('刪除成功', '已移除資源擁有者授權');\n          deleteResourceRow(un);\n          refreshResourceIndex();\n          if (vm.deviceListOpt.bindUn === un) {\n            vm.deviceListOpt.data = [];\n            vm.deviceListOpt.bindUn = null;\n          }\n          break;\n        default:\n          dialogs.notify(\n            '刪除失敗',\n            InApiUtils.stringFormat('刪除資源發生錯誤，錯誤代碼：{0}<br/>錯誤訊息：{1}', err.code, err.msg)\n          );\n          break;\n      }\n    }\n\n    function toggleResourceList() {\n      vm.flagShowResource = !vm.flagShowResource;\n    }\n\n    function getResourceAuth(un) {\n      un = un || '';\n\n      ResourceDialog.showAuthentication(un)\n        .then(function (resUn) {\n          addResourceRow(resUn);\n        });\n    }\n\n    function confimResourceDelete(un, evt) {\n      evt.stopPropagation();\n\n      if (!un) {\n        return;\n      }\n\n      dialogs.confirm('刪除資源存取', InApiUtils.stringFormat('是否確定要刪除以下資源存取[{0}]', un))\n        .result.then(function () {\n          ResourceDAO.deleteResource(un)\n            .then(function (resData) {\n              handleDelErrCode(resData.err, un);\n            }, function () {\n              dialogs.notify('刪除失敗', '伺服器發生錯誤，請稍後再試');\n            });\n        });\n    }\n\n    function doSearchDevice() {\n      var data = angular.merge([], devicesCache);\n\n      vm.deviceListOpt.data = $filter('filter')(data, {devId: vm.qryDeviceId});\n    }\n\n    function clearQueryId() {\n      if (!vm.qryDeviceId) {\n        vm.deviceListOpt.data = devicesCache;\n      }\n    }\n\n    function getEmptyArray(total) {\n      total = parseInt(total, 10) || 1;\n\n      return new Array(total);\n    }\n\n    function getPageClass(i) {\n      if (i + 1 === vm.deviceGridApi.pagination.getPage()) {\n        return 'active';\n      }\n\n      return '';\n    }\n\n    function goDetail(devId, devCategory) {\n      $state.go('devicelog.detail', {un: vm.deviceListOpt.bindUn, devId: devId, devCategory: devCategory});\n    }\n\n    init();\n\n    vm.toggleResourceList = toggleResourceList;\n    vm.getResourceAuth = getResourceAuth;\n    vm.confimResourceDelete = confimResourceDelete;\n    vm.doSearchDevice = doSearchDevice;\n    vm.clearQueryId = clearQueryId;\n    vm.getEmptyArray = getEmptyArray;\n    vm.getPageClass = getPageClass;\n    vm.goDetail = goDetail;\n\n    return vm;\n  }\n}());\n"],"file":"devicelog-5-1-list-controller.js"}