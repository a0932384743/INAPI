{"version":3,"names":[],"mappings":"","sources":["core/directives/equal-heights-directive.js"],"sourcesContent":["(function () {\n  'use strict';\n\n  angular.module('core')\n    .directive('equalHeights', equalHeights);\n\n  equalHeights.$inject = ['$timeout'];\n\n  function equalHeights($timeout) {\n    var directive = {};\n\n    /* jshint unused:false */\n    /* eslint no-unused-vars:0 */\n    /* eslint \"angular/ng_document_service\":0 */\n    /* global document : false */\n    function link(scope, element, attrs) {\n      function watchHandler(newValue, oldValue) {\n        function timerHandler() {\n          var sourceSelector, targetSelector, maxHeight;\n          sourceSelector = angular.isDefined(scope.sourceSelector) ?\n            angular.element(document.querySelector(scope.sourceSelector)) : null;\n          targetSelector = angular.isDefined(scope.targetSelector) ?\n            angular.element(document.querySelector(scope.targetSelector)) : null;\n          maxHeight = 0;\n\n          if (sourceSelector && sourceSelector.length > 0) {\n            angular.forEach(sourceSelector, function (node) {\n              if (node && node.offsetHeight && Number(node.offsetHeight) > maxHeight) {\n                maxHeight = Number(node.offsetHeight);\n              }\n            });\n          } else {\n            maxHeight = Number(element[0].offsetHeight);\n          }\n\n          if (targetSelector && targetSelector.length > 0) {\n            angular.forEach(targetSelector, function (node) {\n              if (node && node.offsetHeight && Number(node.offsetHeight) !== maxHeight) {\n                node.style.height = maxHeight + 'px';\n              }\n            });\n          }\n        }\n\n        $timeout(timerHandler, 50);\n      }\n\n      element.ready(function () {\n        scope.$watch(function () {\n          return element[0].offsetHeight;\n        }, watchHandler);\n\n        scope.$on('imagesLoaded.ALWAYS', watchHandler);\n      });\n    }\n\n    directive = {\n      restrict: 'A',\n      scope: {\n        sourceSelector: '@',\n        targetSelector: '@'\n      },\n      link: link\n    };\n\n    return directive;\n  }\n}());\n"],"file":"equal-heights-directive.js"}