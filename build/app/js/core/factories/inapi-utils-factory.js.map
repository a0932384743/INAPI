{"version":3,"names":[],"mappings":"","sources":["core/factories/inapi-utils-factory.js"],"sourcesContent":["(function () {\n  'use strict';\n\n  angular.module('core')\n    .factory('InApiUtils', InApiUtils);\n\n  InApiUtils.$inject = ['$location'];\n\n  function InApiUtils($location) {\n    var service = {};\n\n    /**\n     * register a global function of string formating like C#\n     * @param {String} str formating string\n     * @return {String} formatted string\n     * @usage: String.format(\"I have a {0}.\", pen); => output: \"I have a pen.\"\n     */\n    function stringFormat(str) {\n      var args = arguments || [];\n\n      if (!str) {\n        return null;\n      }\n\n      if (args.length === 1) {\n        return str;\n      }\n\n      return str.replace(/\\{(\\d+)\\}/g,\n        function (m, i) {\n          // i is String\n          i = parseInt(i, 10);\n          return args[i + 1];\n        }\n      );\n    }\n\n    function camelize(str) {\n      if (!str || angular.isNumber(str)) {\n        return str;\n      }\n\n      str = str.replace(/[\\-_\\s]+(.)?/g, function (match, chr) {\n        return chr ? chr.toUpperCase() : '';\n      });\n\n      // Ensure 1st char is always lowercase\n      return str.substr(0, 1).toLowerCase() + str.substr(1);\n    }\n\n    function camelizeObj(obj) {\n      var i, cnt, key, formattedObj = {}, value;\n\n      if (!obj) {\n        return obj;\n      }\n\n      if (obj.constructor === Array) {\n        cnt = obj.length;\n\n        formattedObj = [];\n\n        for (i = 0; i < cnt; ++i) {\n          formattedObj[i] = camelizeObj(obj[i]);\n        }\n      } else if (obj.constructor === Object) {\n        for (key in obj) {\n          if (obj.hasOwnProperty(key)) {\n            value = obj[key];\n            formattedObj[camelize(key)] = value && value.constructor === Function ? value : camelizeObj(value);\n          }\n        }\n      } else {\n        formattedObj = obj;\n      }\n\n      return formattedObj;\n    }\n\n    function generateErrPack(code, msg) {\n      return {\n        err: {\n          code: code,\n          msg: msg\n        }\n      };\n    }\n\n    function getAppRootUrl() {\n      return stringFormat('{0}://{1}:{2}/#/', $location.protocol(), $location.host(), $location.port());\n    }\n\n    service.stringFormat = stringFormat;\n    service.camelize = camelize;\n    service.camelizeObj = camelizeObj;\n    service.generateErrPack = generateErrPack;\n    service.getAppRootUrl = getAppRootUrl;\n\n    return service;\n  }\n}());\n"],"file":"inapi-utils-factory.js"}