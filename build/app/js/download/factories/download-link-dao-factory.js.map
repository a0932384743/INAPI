{"version":3,"names":[],"mappings":"","sources":["download/factories/download-link-dao-factory.js"],"sourcesContent":["(function () {\n  'use strict';\n\n  angular.module('download')\n    .factory('DownLoadLinkDAO', DownLoadLinkDAO);\n\n  DownLoadLinkDAO.$inject = ['$q', '$http', '$templateCache', 'DOC_LIST', 'EMU_LIST'];\n\n  /* jshint sub:true */\n  /* eslint dot-notation:0 */\n  function DownLoadLinkDAO($q, $http, $templateCache, DOC_LIST, EMU_LIST) {\n    var service = {}, configUrls;\n\n    configUrls = {\n      docUrls: 'i18n/download/doc-download-urls-zh-tw.json',\n      emulatorUrls: 'i18n/download/emulator-download-urls-zh-tw.json'\n    };\n\n    function getDocUrlsList() {\n      var data = DOC_LIST['zh-tw'] || $templateCache.get(configUrls.docUrls);\n\n      if (data) {\n        return $q.when({data: angular.fromJson(data)});\n      }\n\n      return $http.get(configUrls.docUrls);\n    }\n\n    function getEmulatorUrlsList() {\n      var data = EMU_LIST['zh-tw'] || $templateCache.get(configUrls.emulatorUrls);\n\n      if (data) {\n        return $q.when({data: angular.fromJson(data)});\n      }\n\n      return $http.get(configUrls.emulatorUrls);\n    }\n\n    service.getDocUrlsList = getDocUrlsList;\n    service.getEmulatorUrlsList = getEmulatorUrlsList;\n\n    return service;\n  }\n}());\n"],"file":"download-link-dao-factory.js"}